import os
import time
import tempfile

time.sleep(0.2)

def handle_run_python(cmd):
    filename = cmd.get("filename")
    if not filename:
        return {"status": "error", "message": "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ —Ñ–∞–π–ª –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è"}

    full_file_path = os.path.abspath(filename)

    if not os.path.exists(full_file_path):
        return {"status": "error", "message": f"‚ùå –§–∞–π–ª '{filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"}

    print("‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—É...")
    time.sleep(0.2)

    try:
        result = subprocess.run(
            ["python", full_file_path],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            encoding="utf-8",
            cwd=os.path.dirname(full_file_path),
            env={**os.environ, "PYTHONIOENCODING": "utf-8"}
        )

        print("üß™ STDOUT repr:", repr(process.stdout))
        print("üß™ STDERR (–æ–± º—î–¥–Ω–∞–Ω–æ –≤ stdout): None")

        output = result.stdout.strip()

        print("üì§ Output (repr):", repr(output))

        return {
            "status": "success" if result.returncode == 0 else "error",
            "output": output,
            "errors": ""
        }

    except Exception as e:
        return {
            "status": "error",
            "message": f"‚ùå –í–∏–Ω—è—Ç–æ–∫ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ: {e}"
        }