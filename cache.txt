{
  "action": "update_code_bulk",
  "updates": [
    {
      "file_path": "widgets/macro_builder.py",
      "update_type": "custom_insert",
      "insert_at_line": 118,
      "code": "\n        # üìã –õ–æ–≥ –∑–∞–ø—É—Å–∫—É –º–∞–∫—Ä–æ—Å—É\n        self.response_area.insert(tk.END, f\"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –º–∞–∫—Ä–æ—Å '{macro.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∏')}' –∑ {len(macro.get('steps', []))} –∫—Ä–æ–∫—ñ–≤\\n\")\n        self.response_area.see(tk.END)"
    },
    {
      "file_path": "widgets/macro_builder.py",
      "update_type": "append",
      "content": "\n    def preview_macro(self):\n        try:\n            name = self.name_entry.get()\n            steps = json.loads(self.steps_area.get(\"1.0\", tk.END))\n            if not isinstance(steps, list):\n                raise ValueError(\"–ü–æ–ª–µ 'steps' –º–∞—î –±—É—Ç–∏ —Å–ø–∏—Å–∫–æ–º\")\n            msg = f\"üß™ –ü—Ä–µ–≤ º—é –º–∞–∫—Ä–æ—Å—É '{name}': {len(steps)} –∫—Ä–æ–∫—ñ–≤\\n\"\n            for i, step in enumerate(steps, 1):\n                msg += f\"  {i}. {step.get('action', '...')}\\n\"\n            self.response_area.insert(tk.END, msg)\n        except Exception as e:\n            self.response_area.insert(tk.END, f\"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –º–∞–∫—Ä–æ—Å—É: {e}\\n\")\n        self.response_area.see(tk.END)"
    },
    {
      "file_path": "widgets/macro_builder.py",
      "update_type": "custom_insert",
      "insert_at_line": 49,
      "code": "        preview_btn = ttk.Button(self, text=\"üß™ Preview & Validate\", command=self.preview_macro)\n        preview_btn.pack(pady=5)"
    }
  ]
}
