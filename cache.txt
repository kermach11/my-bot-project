{
  "action": "create_file",
  "filename": "ben_gui_desktop/ben_gui.py",
  "content": "import tkinter as tk\nfrom tkinter import messagebox, scrolledtext\nimport json\nimport os\n\nCACHE_FILE = \"cache.txt\"\n\nclass BenGUI:\n    def __init__(self, root):\n        self.root = root\n        self.root.title(\"Ben Assistant GUI\")\n\n        self.input_label = tk.Label(root, text=\"–í–≤–µ–¥—ñ—Ç—å JSON-–∫–æ–º–∞–Ω–¥—É\")\n        self.input_label.pack()\n\n        self.input_box = scrolledtext.ScrolledText(root, height=10, width=80)\n        self.input_box.pack()\n\n        self.send_button = tk.Button(root, text=\"‚ñ∂Ô∏è –ù–∞–¥—ñ—Å–ª–∞—Ç–∏\", command=self.send_command)\n        self.send_button.pack(pady=4)\n\n        self.undo_button = tk.Button(root, text=\"‚Ü©Ô∏è Undo\", command=lambda: self.send_simple(\"undo_change\"))\n        self.undo_button.pack(pady=2)\n\n        self.repeat_button = tk.Button(root, text=\"üîÅ Repeat\", command=lambda: self.send_simple(\"repeat_last\"))\n        self.repeat_button.pack(pady=2)\n\n        self.output_label = tk.Label(root, text=\"–û—Å—Ç–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏\")\n        self.output_label.pack(pady=4)\n\n        self.history_box = scrolledtext.ScrolledText(root, height=10, width=80, state=\"disabled\")\n        self.history_box.pack()\n\n    def send_simple(self, action):\n        command = {\"action\": action}\n        self.write_cache([command])\n        self.append_history(json.dumps(command, ensure_ascii=False))\n\n    def send_command(self):\n        try:\n            text = self.input_box.get(\"1.0\", tk.END).strip()\n            if not text:\n                messagebox.showwarning(\"–£–≤–∞–≥–∞\", \"–ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—î\")\n                return\n            command = json.loads(text)\n            if not isinstance(command, list):\n                command = [command]\n            self.write_cache(command)\n            self.append_history(text)\n            self.input_box.delete(\"1.0\", tk.END)\n        except Exception as e:\n            messagebox.showerror(\"–ü–æ–º–∏–ª–∫–∞\", f\"‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π JSON: {str(e)}\")\n\n    def write_cache(self, data):\n        with open(CACHE_FILE, \"w\", encoding=\"utf-8\") as f:\n            json.dump(data, f, indent=2, ensure_ascii=False)\n\n    def append_history(self, text):\n        self.history_box.configure(state=\"normal\")\n        self.history_box.insert(tk.END, text + \"\\n\\n\")\n        self.history_box.configure(state=\"disabled\")\n\nif __name__ == \"__main__\":\n    if not os.path.exists(\"ben_gui_desktop\"):\n        os.makedirs(\"ben_gui_desktop\")\n\n    root = tk.Tk()\n    gui = BenGUI(root)\n    root.mainloop()"
}
