{
  "action": "update_code",
  "file_path": "ben_gui_desktop/main_gui.py",
  "update_type": "custom_insert",
  "insert_at_line": 22,
  "code": "def test_python_file():\n    filename = parameter_form.get_command_fields().get(\"filename\")\n    if not filename:\n        response_area.insert(tk.END, \"‚ö†Ô∏è –í–∫–∞–∂—ñ—Ç—å 'filename' –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.\\n\")\n        return\n    command = {\"action\": \"test_python\", \"filename\": filename}\n    with open(request_file, \"w\", encoding=\"utf-8\") as f:\n        json.dump([command], f, indent=2)\n    def show_result():\n        if os.path.exists(response_file):\n            with open(response_file, \"r\", encoding=\"utf-8\") as f:\n                try:\n                    result = json.load(f)\n                    response_area.insert(tk.END, f\"üß™ –¢–µ—Å—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}\\n\")\n                    response_area.see(tk.END)\n                except Exception as e:\n                    response_area.insert(tk.END, f\"‚ùå Error: {e}\\n\")\n    root.after(1000, show_result)\n\ntest_button = ttk.Button(root, text=\"üß™ Test Python File\", command=test_python_file)\ntest_button.pack(pady=5)"
}
