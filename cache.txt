{
  "action": "update_code",
  "parameters": {
    "file_path": "handlers/run_python.py",
    "updates": [
      {
        "line_number": 1,
        "new_code": "import os\nimport time\nimport subprocess\n\ntime.sleep(0.2)\n\ndef handle_run_python(cmd):\n    filename = cmd.get(\"filename\")\n    if not filename:\n        return {\"status\": \"error\", \"message\": \"‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ —Ñ–∞–π–ª –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è\"}\n\n    full_file_path = os.path.abspath(filename)\n\n    if not os.path.exists(full_file_path):\n        return {\"status\": \"error\", \"message\": f\"‚ùå –§–∞–π–ª '{filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ\"}\n\n    print(\"‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—É...\")\n    time.sleep(0.2)\n\n    try:\n        result = subprocess.run(\n            [\"python\", full_file_path],\n            stdout=subprocess.PIPE,\n            stderr=subprocess.STDOUT,\n            text=True,\n            encoding=\"utf-8\",\n            cwd=os.path.dirname(full_file_path),\n            env={**os.environ, \"PYTHONIOENCODING\": \"utf-8\"}\n        )\n\n        print(\"üß™ STDOUT repr:\", repr(result.stdout))\n        output = result.stdout.strip()\n        print(\"üì§ Output (repr):\", repr(output))\n\n        return {\n            \"status\": \"success\" if result.returncode == 0 else \"error\",\n            \"output\": output,\n            \"errors\": \"\"\n        }\n\n    except Exception as e:\n        return {\n            \"status\": \"error\",\n            \"message\": f\"‚ùå –í–∏–Ω—è—Ç–æ–∫ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ: {e}\"\n        }"
      }
    ]
  },
  "comment": "‚úÖ –°—Ç–∞–±—ñ–ª—å–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è run_python –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é stdout, cwd, utf-8"
}
