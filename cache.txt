{
  "action": "create_file",
  "filename": "ben_gui_desktop/widgets/macro_builder.py",
  "content": "import tkinter as tk\nfrom tkinter import ttk, messagebox\nimport json\n\nclass MacroBuilder(ttk.Frame):\n    def __init__(self, parent):\n        super().__init__(parent)\n\n        self.steps = []\n\n        ttk.Label(self, text=\"ðŸ§± Macro Builder\", font=(\"Helvetica\", 14, \"bold\")).pack(anchor=\"w\", pady=(0, 5))\n\n        self.listbox = tk.Listbox(self)\n        self.listbox.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)\n\n        form_frame = ttk.Frame(self)\n        form_frame.pack(fill=tk.X, padx=5)\n\n        ttk.Label(form_frame, text=\"Action:\").pack(side=tk.LEFT)\n        self.action_var = tk.StringVar()\n        self.action_entry = ttk.Entry(form_frame, textvariable=self.action_var)\n        self.action_entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=(5, 5))\n        ttk.Button(form_frame, text=\"âž• Add\", command=self.add_step).pack(side=tk.LEFT)\n        ttk.Button(form_frame, text=\"ðŸ—‘ Remove\", command=self.remove_selected).pack(side=tk.LEFT, padx=(5, 0))\n\n        ttk.Button(self, text=\"ðŸ’¾ Save Macro\", command=self.save_macro).pack(pady=5)\n\n    def add_step(self):\n        action = self.action_var.get().strip()\n        if action:\n            self.steps.append({\"action\": action})\n            self.listbox.insert(tk.END, action)\n            self.action_var.set(\"\")\n\n    def remove_selected(self):\n        selected = self.listbox.curselection()\n        if not selected:\n            return\n        index = selected[0]\n        self.listbox.delete(index)\n        del self.steps[index]\n\n    def save_macro(self):\n        if not self.steps:\n            messagebox.showerror(\"Error\", \"No steps to save\")\n            return\n        macro = {\n            \"action\": \"macro\",\n            \"steps\": self.steps\n        }\n        with open(\"macro_command.json\", \"w\", encoding=\"utf-8\") as f:\n            json.dump(macro, f, indent=2)\n        messagebox.showinfo(\"Saved\", \"âœ… Macro saved to macro_command.json\")"
}
