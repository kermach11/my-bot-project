import json
from datetime import datetime
from gpt_interpreter import interpret_user_prompt

def run_feedback_analysis():
    print("üîÑ –ü–æ—á–∏–Ω–∞—é –∞–Ω–∞–ª—ñ–∑...")

    try:
        with open("gpt_response.json", "r", encoding="utf-8") as f:
            response = json.load(f)

        prompt = f"""
–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –Ω–∞—Å—Ç—É–ø–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å GPT –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω—É –¥—ñ—é. –í–∏–∑–Ω–∞—á:
- –ß–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –æ—á—ñ–∫—É–≤–∞–Ω–Ω—é?
- –Ø–∫—â–æ –Ω—ñ ‚Äî —â–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏?
- –Ø–∫–∏–π –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫ –ª–æ–≥—ñ—á–Ω–∏–π?

–û—Å—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å:
{json.dumps(response, indent=2, ensure_ascii=False)}
"""

        result = interpret_user_prompt(prompt)
        print(f"[DEBUG] GPT –ø–æ–≤–µ—Ä–Ω—É–≤:\n{result}\n")
        if not isinstance(result, str):
            raise ValueError("GPT –ø–æ–≤–µ—Ä–Ω—É–≤ None –∞–±–æ –Ω–µ—Å—Ç—Ä–æ–∫–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")


        timestamp = datetime.now().strftime("%Y-%m-%d %H-%M-%S")
        filename = f"feedback_report_{timestamp}.txt"

        with open(filename, "w", encoding="utf-8") as f:
            f.write(result)

        print(f"üìù Feedback –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {filename}")

    except Exception as e:
        print(f"‚ùå Feedback –ø–æ–º–∏–ª–∫–∞: {e}")

# üîÅ –ù–µ –∑–∞–±—É–¥—å —Ü—é —á–∞—Å—Ç–∏–Ω—É!
if __name__ == "__main__":
    print("‚úÖ –Ü–º–ø–æ—Ä—Ç –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ")
    run_feedback_analysis()
