import os
import json
def interpret_user_prompt(prompt):
    from openai import OpenAI
    from config import API_KEY
    import json

    client = OpenAI(api_key=API_KEY)
    system_msg = {
        "role": "system",
        "content": (
            "–¢–∏ –ø—Ä–∞—Ü—é—î—à –≤ —Å–∏—Å—Ç–µ–º—ñ Ben Assistant. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø—Ä–æ–º–ø—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥—ñ—é "
            "—É —Ñ–æ—Ä–º–∞—Ç—ñ JSON, —è–∫—É –∞–≥–µ–Ω—Ç –∑–º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏. –ü–æ–≤–µ—Ä–Ω–∏ –ª–∏—à–µ –æ–¥–∏–Ω JSON-–æ–± º—î–∫—Ç. "
            "–î–æ–∑–≤–æ–ª–µ–Ω—ñ –¥—ñ—ó: append_file, update_code, run_macro, insert_between_markers, run_shell —Ç–æ—â–æ. "
            "–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –≤–∏–≥–∞–¥–∞–Ω—ñ –¥—ñ—ó –Ω–∞ –∫—à—Ç–∞–ª—Ç 'create_function' ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π append_file –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ filename —ñ content."
        )
    }

    user_msg = {"role": "user", "content": prompt}

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[system_msg, user_msg],
        temperature=0.3
    )

    raw = response.choices[0].message.content.strip()

    # üßº –û—á–∏—Å—Ç–∫–∞ Markdown-—Ñ–æ—Ä–º–∞—Ç—É
    if raw.startswith("```json"):
        raw = raw[7:]  # –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫
    if raw.endswith("```"):
        raw = raw[:-3]  # –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—è–¥–æ–∫
    raw = raw.strip()

    print("[GPT RAW OUTPUT]\n", raw)

    try:
        data = json.loads(raw)
        with open("cache.txt", "w", encoding="utf-8") as f:
            f.write(json.dumps(data, indent=2, ensure_ascii=False))
        print("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –≤ cache.txt")
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ JSON: {e}")
